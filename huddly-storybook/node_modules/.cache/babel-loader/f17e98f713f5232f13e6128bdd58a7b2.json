{"ast":null,"code":"var _jsxFileName = \"/Users/rostimelk/Projects/huddly-components/huddly-storybook/src/stories/Forms/Button/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ButtonElement = styled.button`\n    /* Your styles here */\n`;\n/**\n * Button component\n */\n\n_c = ButtonElement;\nexport const Button = _ref => {\n  let {\n    children,\n    disabled,\n    label,\n    onClick,\n    type = 'button',\n    ...props\n  } = _ref;\n\n  const handleHtmlTag = () => {\n    switch (type) {\n      case 'button':\n        return 'button';\n\n      case 'submit':\n        return 'input';\n\n      case 'anchor':\n        return 'a';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ButtonElement, {\n      as: handleHtmlTag(),\n      disabled: disabled,\n      onClick: () => {},\n      type: type === 'submit' && 'submit',\n      ...props,\n      children: label && type !== 'submit' ? label : children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c2 = Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonElement\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/rostimelk/Projects/huddly-components/huddly-storybook/src/stories/Forms/Button/index.tsx"],"names":["React","styled","ButtonElement","button","Button","children","disabled","label","onClick","type","props","handleHtmlTag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAUA,OAAO,MAAMC,aAAa,GAAGD,MAAM,CAACE,MAAO;AAC3C;AACA,CAFO;AAIP;AACA;AACA;;KANaD,a;AAOb,OAAO,MAAME,MAAM,GAAG,QAOH;AAAA,MAPI;AACnBC,IAAAA,QADmB;AAEnBC,IAAAA,QAFmB;AAGnBC,IAAAA,KAHmB;AAInBC,IAAAA,OAJmB;AAKnBC,IAAAA,IAAI,GAAG,QALY;AAMnB,OAAGC;AANgB,GAOJ;;AACf,QAAMC,aAAa,GAAG,MAAM;AACxB,YAAQF,IAAR;AACI,WAAK,QAAL;AACI,eAAO,QAAP;;AACJ,WAAK,QAAL;AACI,eAAO,OAAP;;AACJ,WAAK,QAAL;AACI,eAAO,GAAP;AANR;AAQH,GATD;;AAWA,sBACI;AAAA,2BACI,QAAC,aAAD;AACI,MAAA,EAAE,EAAEE,aAAa,EADrB;AAEI,MAAA,QAAQ,EAAEL,QAFd;AAGI,MAAA,OAAO,EAAE,MAAM,CAAE,CAHrB;AAII,MAAA,IAAI,EAAEG,IAAI,KAAK,QAAT,IAAqB,QAJ/B;AAAA,SAKQC,KALR;AAAA,gBAOKH,KAAK,IAAIE,IAAI,KAAK,QAAlB,GAA6BF,KAA7B,GAAqCF;AAP1C;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAhCM;MAAMD,M","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface ButtonProps {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    label?: string;\n    onClick?: () => void;\n    type?: 'button' | 'submit' | 'anchor';\n}\n\nexport const ButtonElement = styled.button`\n    /* Your styles here */\n`;\n\n/**\n * Button component\n */\nexport const Button = ({\n    children,\n    disabled,\n    label,\n    onClick,\n    type = 'button',\n    ...props\n}: ButtonProps) => {\n    const handleHtmlTag = () => {\n        switch (type) {\n            case 'button':\n                return 'button';\n            case 'submit':\n                return 'input';\n            case 'anchor':\n                return 'a';\n        }\n    };\n\n    return (\n        <>\n            <ButtonElement\n                as={handleHtmlTag()}\n                disabled={disabled}\n                onClick={() => {}}\n                type={type === 'submit' && 'submit'}\n                {...props}\n            >\n                {label && type !== 'submit' ? label : children}\n            </ButtonElement>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
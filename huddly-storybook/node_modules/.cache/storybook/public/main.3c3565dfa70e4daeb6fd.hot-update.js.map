{"version":3,"file":"main.3c3565dfa70e4daeb6fd.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAlDA;AAmDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAAA;;AAAA;AAAA;AAHA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAqBA;;AAnCA;;AAAA","sources":["webpack://huddly-storybook/./src/stories/Forms/Input/index.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps {\n    /**\n     * Input type\n     */\n    type: string;\n\n    /**\n     * Label text\n     */\n    label?: string;\n\n    /**\n     * Is input required?\n     */\n    isRequired?: boolean;\n}\n\ninterface WrapperProps {\n    focused: boolean;\n    expanded: boolean;\n}\n\n/**\n * Todo\n * Add focus outline\n * Add color variations\n */\nconst Wrapper = styled.div<WrapperProps>`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    max-width: 600px;\n    height: 56px;\n    margin-bottom: 1rem;\n    padding: 0 15px;\n    border-radius: 6px;\n    font-size: 16px;\n    cursor: text;\n    transition: all 0.2s ease-in-out;\n    background-color: rgba(0, 0, 0, 0.3);\n\n    ${({ focused, expanded }) =>\n        (focused || expanded) &&\n        `border: 1px solid black; \n        background-color: var(--color-white);`}\n\n    label {\n        cursor: inherit;\n        transition: inherit;\n\n        ${({ focused, expanded }) =>\n            (focused || expanded) &&\n            `font-size: 12px;\n            font-weight: bold;`}\n\n        // required text\n        i {\n            font-style: normal;\n            font-size: 12px;\n            font-weight: normal;\n            padding-left: 5px;\n        }\n    }\n\n    input {\n        all: unset;\n        display: block;\n        height: 0;\n        transition: inherit;\n        will-change: height;\n\n        ${({ focused, expanded }) => (focused || expanded) && `height: 1.25em;`}\n    }\n`;\n\n/**\n * Input component\n */\nexport const Input = ({ type, label, isRequired }: InputProps) => {\n    const [focused, setFocused] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onFocus = () => setFocused(true);\n    const onBlur = () => setFocused(false);\n\n    const handleInput = () => {\n        if (!inputRef.current) return;\n        setExpanded(inputRef.current.value.length > 0);\n    };\n\n    return (\n        <Wrapper\n            focused={focused}\n            expanded={expanded}\n            onClick={() => inputRef?.current?.focus()}\n        >\n            {label && (\n                <label>\n                    {label}\n                    {!isRequired && <i>(optional)</i>}\n                </label>\n            )}\n            <input\n                type={type}\n                required={isRequired}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onChange={handleInput}\n                ref={inputRef}\n            />\n        </Wrapper>\n    );\n};\n"],"names":[],"sourceRoot":""}